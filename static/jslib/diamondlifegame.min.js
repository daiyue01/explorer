/* HACD Game of life */

/*

普通样式：黑底绿点

1、灰色背景    1/10
2、圆角矩点    1/10
3、圆点       1/10
5、菱形◇点     1/10

2、无背景     1/16
3、点放大     1/16
4、四分之一彩  1/16
6、红色       1/16
7、半透交叠    1/16

9、金色镂空    1/32
10、全彩色    1/32
11、立体方块   1/32

*/

function CreateLifeGameInitialSVG(lifegenehex, wide, bkclr) {
    var gene = HEX_TO_U8ARY(lifegenehex)
    , points = U8ARY_TO_BITS(gene)
    ;

    // var lifeptmaps = []
    // for(var i=0; i<16; i++){
    //     lifeptmaps.push(new Array(256))
    // }
    // for(var i=0; i<16; i++) {
    //     for(var k=0; k<16; k++){
    //         // var x = i*16 + k
    //         // lifeptmaps[i][k] = points[x]
    //     }
    // }

    // console.log(lifegenehex, gene, points)

    var perisk = 0
    function seekMaybe(per) {
        var gn = gene[perisk]
        // console.log(gn)
        perisk ++
        return gn % per == 0
    }

    var ptclrsk = 0
    function getPtClr(part1of4, i, k) {
        if( part1of4 && !(i*k==0 || i==15 || k==15) ) {
            return lifecolor
        }
        var cls = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple']
        , rtcl = cls[((i+1)*k+ptclrsk) % cls.length]
        ptclrsk ++
        return rtcl
    }

    // persent
    var perst1 = 8
    , perst2 = 16
    , perst3 = 32;
    // var perst1 = 4
    // , perst2 = 4
    // , perst3 = 4;
    // style
    var backcolor = 'black'
    , lifecolor = 'green'
    , pointShape = 'rect'
    , enlarge = false
    , fullcolorful = false
    , partcolorful = false
    // point shape
    if(seekMaybe(perst1)) {
        pointShape = 'rectcor'
    }
    if(seekMaybe(perst1)) {
        pointShape = 'circle'
    }
    if(seekMaybe(perst1)) {
        pointShape = 'rhombus'
    }
    // life color
    if(seekMaybe(perst2)) {
        lifecolor = '#cd0b20' // red
    }
    if(seekMaybe(perst2)){
        partcolorful = true
    }
    if(seekMaybe(perst3)){
        fullcolorful = true
    }
    // transform
    if(seekMaybe(perst1)) {
        enlarge = true
    }
    // back color
    if(seekMaybe(perst1)) {
        backcolor = 'silver'
    }
    if(seekMaybe(perst2)) {
        backcolor = 'none' // no back
    }
    if(seekMaybe(perst3)) {
        backcolor = '#daad7b' // gold
        if(lifecolor == 'green'){
            lifecolor = bkclr // empty color
        }
    }







    
    // draw SVG
    var ptdraws = []
    // background
    ptdraws.push('<rect x="10" y="10" width="180" height="180" fill="'+backcolor+'" />') 
    // points
    function lifePtElm(ps, lg, fc, pc, i, k) {
        var point = ''
        var x = 20 + i*10
        , y = 20 + k*10
        , cx = x + 5
        , cy = y + 5
        ;
        switch(ps) {
        case 'rect':
        case 'rectcor':
            var wd = 10
            , r = 3
            if(lg) {
                wd = 14
                x -= 2
                y -= 2
                r = 4
            }
            var rcor = ps=='rectcor' ? ' rx="'+r+'" ry="'+r+'" ' : ''
            point = '<rect x="'+x+'" y="'+y+'" width="'+wd+'" height="'+wd+'" ' + rcor
            break
        case 'circle':
            var r = 4
            if(lg) {
                r = 7
            }
            point = '<circle cx="'+cx+'" cy="'+cy+'" r="'+r+'"'
            break
        case 'rhombus':
            var d = 5
            if(lg) {
                d = 7
            }
            var p1 = cx+','+(cy-d)
            , p2 = (cx+d)+','+cy
            , p3 = cx+','+(cy+d)
            , p4 = (cx-d)+','+cy
            point = '<polygon points="'+p1+' '+p2+' '+p3+' '+p4+'"'
            break
        }
        var lfclr = lifecolor
        if(pc||fc) {
            lfclr = getPtClr(pc, i, k)
        }
        return point + ' fill="'+lfclr+'" />'
    }
    for(var i=0; i<16; i++) {
        for(var k=0; k<16; k++){
            var x = i*16 + k
            , has = points[x]
            if(has){
                ptdraws.push( lifePtElm(pointShape, enlarge, fullcolorful, partcolorful, i, k) )
            }
        }
    }


    // console.log(ptdraws)

    // ret SVG
    return '<svg class="dvhip9" version="1.2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200" width="'+wide+'" height="'+wide+'"><g>'+ptdraws.join('')+'</g></svg>'
}